{
  "name": "Simple CV Research Agent",
  "nodes": [
    {
      "parameters": {},
      "id": "trigger",
      "name": "When Called",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1,
      "position": [250, 300]
    },
    {
      "parameters": {
        "model": "gpt-4o",
        "options": {
          "temperature": 0.3,
          "systemMessage": "You are a candidate research agent. Given a candidate's information:\n\n1. Generate 3-5 search queries to find their online presence\n2. Suggest where to look (LinkedIn, GitHub, etc.)\n3. Create a research checklist\n4. Return structured JSON with research plan\n\nFocus on professional information only. Return format:\n{\n  \"searchQueries\": [\"query1\", \"query2\"],\n  \"platformsToCheck\": [\"LinkedIn\", \"GitHub\"],\n  \"researchChecklist\": [\"Verify work history\", \"Check technical skills\"],\n  \"priority\": \"high/medium/low\"\n}"
        }
      },
      "id": "agent",
      "name": "Research Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.5,
      "position": [450, 300]
    },
    {
      "parameters": {
        "model": "gpt-4o",
        "options": {}
      },
      "id": "model",
      "name": "OpenAI Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [650, 400]
    },
    {
      "parameters": {
        "text": "Candidate: {{ $json.name }}\nScore: {{ $json.score }}\nPosition: {{ $json.position }}\nSkills: {{ $json.skills }}\n\nGenerate a research plan for this high-scoring candidate."
      },
      "id": "prompt",
      "name": "Prepare Prompt",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.2,
      "position": [450, 200]
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1H0K91oMK2T5F6vEi9H4I9VxMx2_fqQ6ShGHxBnGxQQo",
          "mode": "id"
        },
        "sheetName": "Research Queue",
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Candidate": "={{ $('trigger').item.json.name }}",
            "Score": "={{ $('trigger').item.json.score }}",
            "Position": "={{ $('trigger').item.json.position }}",
            "Research Plan": "={{ JSON.stringify($json.output) }}",
            "Status": "Pending",
            "Date Added": "={{ new Date().toISOString() }}"
          }
        }
      },
      "id": "log",
      "name": "Log to Research Queue",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.1,
      "position": [650, 300]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "status",
              "name": "status",
              "value": "research_queued",
              "type": "string"
            },
            {
              "id": "candidate",
              "name": "candidate",
              "value": "={{ $('trigger').item.json.name }}",
              "type": "string"
            },
            {
              "id": "message",
              "name": "message",
              "value": "Research plan created and queued",
              "type": "string"
            }
          ]
        }
      },
      "id": "response",
      "name": "Return Status",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.2,
      "position": [850, 300]
    }
  ],
  "connections": {
    "trigger": {
      "main": [
        [
          {
            "node": "prompt",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "prompt": {
      "main": [
        [
          {
            "node": "agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "agent": {
      "main": [
        [
          {
            "node": "log",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "model": {
      "ai_languageModel": [
        [
          {
            "node": "agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "log": {
      "main": [
        [
          {
            "node": "response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  }
}